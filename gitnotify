#!/bin/sh
#
#  gitnotify or diff2html
#  Copyright (C) by Vladislav Moskovets (github at vlad.org.ua)
#  html/css based on svnnotify
#  and diff2html shell script
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.


[ -x `which tempfile` ] && tempfile=`tempfile` || tempfile="/tmp/.gitnotify-$$-`date +%N`"

LOG="(none)"
TITLE="TITLE"
REV="(none)"
AUTHOR="none &lt;none@none&gt;"
DATE="`date`"


usage() {
	echo "usage: $0 [-g] [-m] [-s] [-a] [-r]"
	exit 1
}

start_html() {
cat <<END
<html>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head><meta http-equiv="content-type" content="text/html; charset=utf-8" /><style type="text/css"><!--
#msg dl { border: 1px #006 solid; background: #369; padding: 6px; color: #fff; }
#msg dt { float: left; width: 6em; font-weight: bold; }
#msg dt:after { content:':';}
#msg dl, #msg dt, #msg ul, #msg li, #header, #footer { font-family: verdana,arial,helvetica,sans-serif; font-size: 10pt;  }
#msg dl a { font-weight: bold}
#msg dl a:link    { color:#fc3; }
#msg dl a:active  { color:#ff0; }
#msg dl a:visited { color:#cc6; }
h3 { font-family: verdana,arial,helvetica,sans-serif; font-size: 10pt; font-weight: bold; }
#msg pre { overflow: auto; background: #ffc; border: 1px #fc0 solid; padding: 6px; }
#msg ul, pre { overflow: auto; }
#header, #footer { color: #fff; background: #636; border: 1px #300 solid; padding: 6px; }
#patch { width: 100%; }
#patch h4 {font-family: verdana,arial,helvetica,sans-serif;font-size:10pt;padding:8px;background:#369;color:#fff;margin:0;}
#patch .propset h4, #patch .binary h4 {margin:0;}
#patch pre {padding:0;line-height:1.2em;margin:0;}
#patch .diff {width:100%;background:#eee;padding: 0 0 10px 0;overflow:auto;}
#patch .propset .diff, #patch .binary .diff  {padding:10px 0;}
#patch span {display:block;padding:0 10px;}
#patch .modfile, #patch .addfile, #patch .delfile, #patch .propset, #patch .binary, #patch .copfile {border:1px solid #ccc;margin:10px 0;}
#patch ins {background:#dfd;text-decoration:none;display:block;padding:0 0px;}
#patch del {background:#fdd;text-decoration:none;display:block;padding:0 0px;}
#patch .lines, .info {color:#888;background:#fff;}
--></style>
<title>$TITLE</title>
</head>
<body>

END

}

htmlizediff() {

	echo '<div id="patch">
<h3>Diff</h3> '

	OIFS=$IFS
	IFS='
'

	# The -r option keeps the backslash from being an escape char.
	read -r s

	while [[ $? -eq 0 ]]; do
		# Get beginning of line to determine what type
		# of diff line it is.
		t1=${s:0:1}
		t2=${s:0:2}
		t3=${s:0:3}
		t4=${s:0:4}
		t7=${s:0:7}

		# Convert &, <, > to HTML entities.
		s=$(sed -e 's/\&/\&amp;/g' -e 's/</\&lt;/g' -e 's/>/\&gt;/g' <<<"$s")
		if [[ $first -eq 1 ]]; then
			first=0
		fi

		# Determine HTML class to use.
		if    [[ "$t7" == 'Only in' ]]; then
			cls='only'
			#if [[ $diffseen -eq 0 ]]; then
			#    diffseen=1
			#    echo -n '</span>'
			#else
			#    if [[ $lastonly -eq 0 ]]; then
			#		echo "</pre>"
			#        echo "</div>"
			#    fi
			#fi
			#if [[ $lastonly -eq 0 ]]; then
			#    echo "<div class='modfile'>"
			#	echo "<pre class='diff'>"
			#fi
			lastonly=1
		elif [[ "$t4" == 'diff' ]]; then
			cls='diff'
			if [[ $diffseen -eq 0 ]]; then
				diffseen=1
			else
				echo "</pre>"
				echo "</div>"
			fi
			id="`echo ${s:5}|sed -e 's/--git//g' -e's/[\/ ]/_/g'`"
			echo "<a id='$id'/>"
			echo "<div class='modfile'>"
			echo "<h4>$s</h4>"
			echo "<pre class='diff'>"
			lastonly=0
		elif  [[ "$t3" == '+++'  ]]; then
			echo -ne '<span class="info">'"$s\n"'</span>'
			lastonly=0
		elif  [[ "$t3" == '---'  ]]; then
			echo -ne '<span class="info">'"$s\n"'</span>'
			lastonly=0
		elif  [[ "$t2" == '@@'   ]]; then
			echo -ne '<span class="info">'"$s\n"'</span>'
			lastonly=0
		elif  [[ "$t1" == '+'    ]]; then
			echo -n '<ins>'"$s"
			echo -ne "\n</ins>"
			lastonly=0
		elif  [[ "$t1" == '-'    ]]; then
			echo -n '<del>'"$s"
			echo -ne "\n</del>"
			lastonly=0
		else
			echo -ne '<span class="cx">'"$s\n"'</span>'
			lastonly=0
		fi

			read -r s
	done
	IFS=$OIFS

	if [[ $diffseen -eq 0  &&  $onlyseen -eq 0 ]]; then
		echo -n '</span q1>'
	else
		echo "</div>"
	fi
	echo
}

end_html() {
cat <<END
</pre>
</div>
</div>

</body>
</html>
END
}

summary() {
	echo '<div id="msg">'
	echo '<dl>'
	if [ $gitmode = 1 ]; then
		git log HEAD -1 --pretty=medium --shortstat | sed -e 's/^commit\(.*\)/<dt>Commit<\/dt> <dd>\1<\/dd>/' \
												-e 's/^Author:\(.*\)/<dt>Author<\/dt> <dd>\1<\/dd>/' \
												-e 's/^Date:\(.*\)/<dt>Date<\/dt> <dd>\1<\/dd><\/dl><h3>Log Message<\/h3><pre>/'
		echo '</pre>'

		#echo '<h3>Modified Paths</h3>'
		#echo '<ul>'
		#echo '<li><a href="#"></a></li>'
		#echo '</ul>'
	else
		echo '<dt>Author</dt> <dd>'$AUTHOR'</dd>'
		echo '<dt>Date</dt> <dd>'
		date
		echo '</dd></dl>'
	fi
	echo '</div>'
}

prepare_mail() {
	exec 6>&1
	exec > $tempfile
}

send_mail() {
	exec 1>&6 6>&-
	mail -a "Content-Type: text/html; charset=UTF-8" -a "Content-Transfer-Encoding: 8bit" -a "X-Mailer: GITNotify v0.1: http://github.com/slayer/gitnotify/tree/master" -s "${SUBJECT:-no subject}" $MAILTO < $tempfile
	rm $tempfile
}

prepare_git() {
	[ -x `which tempfile` ] && gitdiff=`tempfile` || tempfile="/tmp/.gitnotify-gitdiff-$$-`date +%N`"
	git-rev-parse --verify HEAD 2>/dev/null || return 1

	git-diff-index -p -M --cached HEAD^ -- >$gitdiff
	exec 7<&0
	exec < $gitdiff
}

post_git() {
	exec 0<&7 7<&-
	rm $gitdiff
}

main() {
	[ `basename $0` = 'gitnotify' ] && gitmode=1 || gitmode=0
	[ `basename $0` = 'diff2html' ] && gitmode=0

	while getopts "gr:a:m:s:" opt; do
		case $opt in
			r) REV=${OPTARG} ;;
			a) AUTHOR=${OPTARG} ;;
			m) MAILTO="$MAILTO ${OPTARG}"; mailmode=1 ;;
			s) SUBJECT=${OPTARG} ;;
			g) gitmode=1 ;;
			*) usage
			;;
			\? ) usage
			;;
		esac
	done

	[ $mailmode ] && prepare_mail
	[ $gitmode ] && prepare_git || usage

	start_html
	summary
	htmlizediff
	end_html

	[ $gitmode ] && post_git
	[ $mailmode ] && send_mail
}

main $@
